@model Blogging.Models.SingleBlog
@{
    ViewBag.Title = Model.Blog.Title;
    ViewBag.sidebar_collapse = "sidebar-collapse";
}
<link rel="stylesheet" href="~/Plugins/flickity/flickity.css" />

<style>
    .carousel {
        background: #EEE;
    }

    .carousel-cell {
        margin-right: 20px;
        overflow: hidden;
    }

    .direct-chat-msg:focus {
        outline: none;
    }

    .carousel-cell img {
        display: block;
        height: 200px;
    }

    @@media screen and ( min-width: 768px ) {
        .carousel-cell img {
            height: 400px;
        }
    }

    .LikeBlog {
        font-size: 1.25rem !important;
    }

    .LikedBlog {
        font-size: 1.25rem !important;
        color: #5f0a87;
    }

    .DisabledLikeBlog {
        font-size: 1.25rem !important;
    }
</style>

<div class="card elevation-3">
    <!-- /.card-header -->
    <div class="card-body">
        <div class="">
            <h1 class="text-center">
                <span class="purple-gradient-text">
                    @Model.Blog.Title
                </span>

                <i class="@ViewData["BookmarkIcon"] fa-bookmark text-info @ViewData["Bookmark"]" style="        cursor: pointer
" id="" title="Bookmark"></i>

            </h1>

            <div class="row text-gray" style=" line-height: 2.5rem; margin-bottom: 1rem">
                <div class="col-8" style="margin:auto">
                    <div class="float-left">
                        <span>
                            Published on: @Model.Blog.PublishDate
                            @if (Model.Blog.UpdateDate != null)
                            {
                                string UpdateDate = "(Updated on: " + Model.Blog.UpdateDate + ")";
                            }
                        </span>

                    </div>

                    <div class="float-right">
                        <span class="ml-3">
                            <i class="fas fa-eye text-lg" title="Views"></i>&nbsp;
                            <span>@Model.Blog.Views</span>
                        </span>
                        <span class="ml-3">
                            <a href="#FocusOnCommentsDiv" class="muted-link">
                                <i class="fas fa-comments text-lg" title="Comments"></i>&nbsp;
                                <span>@Model.CommentsCount</span>
                            </a>
                        </span>
                        <span class="ml-3">
                            <i class="fas fa-thumbs-up @ViewData["Like"]" title="Like" style="cursor:pointer"></i>
                            <span id="likesCount">@Model.Blog.Likes</span>
                        </span>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12 col-md-2 col-lg-2">

                <div class="card card-info card-outline elevation-3">
                    <div class="card-body box-profile">
                        <div class="text-center">
                            @if (Model.Profile.ImgURL != null)
                            {
                                <img class="profile-user-img img-fluid img-circle lazy" src="~/Images/img-spinner.svg" data-src="/Images/UserProfiles/@Model.Profile.ImgURL" alt="@Model.Profile.Uname">
                            }
                            else
                            {
                                <img src="~/Images/img-spinner.svg" data-src="~/Images/default_user.png" class="profile-user-img img-fluid img-circle lazy" alt="User Image">
                            }
                        </div>

                        <h3 class="profile-username text-center"> @Model.Profile.Name</h3>
                        <input type="hidden" id="CurrentUserName" value="@Model.Profile.Name" />

                        <p class="text-muted text-center">
                            <a href="@Url.Action("ViewProfile","Account", new { Username = Model.Profile.Uname })">
                                @@@Model.Profile.Uname
                            </a>

                        </p>

                        <ul class="list-group list-group-unbordered mb-3">
                            <li class="list-group-item">
                                <b>Followers</b>
                                <span class="float-right" id="FollowersCount"> @Model.Profile.Followers</span>
                            </li>
                            <li class="list-group-item">
                                <b>Following</b>
                                <span class="float-right"> @Model.Profile.Following</span>
                            </li>
                            <li class="list-group-item">
                                <b>Blogs</b>
                                <span class="float-right"> @Model.Profile.BlogsCount</span>
                            </li>
                        </ul>

                        @if (Session["userID"] == null)
                        {
                            <button class="btn btn-dark text-white btn-block" type="button" data-toggle="modal" data-target="#modal-login">Login/Register</button>
                        }
                        else if (Model.Profile.UserID != Convert.ToDouble(Session["userID"]))
                        {
                            <button type="button" class="btn btn-info btn-block @ViewData["Follow"]" id="@Model.Profile.UserID">
                                @ViewData["Follow"]
                            </button>
                        }
                        else
                        {
                            <button href="#" class="btn btn-info btn-block" disabled="disabled" title="You cannot follow your own ID"><b>Follow</b></button>
                        }

                    </div>
                    <!-- /.card-body -->
                </div>
                <br />
                <!-- Widget: user widget style 2 -->
                <div class="card sticky-top-t1 ">
                    <div class="card-body p-0">
                        <ul class="nav flex-column">
                            @{
                                List<string> ColorList = new List<string> { "bg-primary", "bg-info", "bg-danger", "bg-warning", "bg-indigo" };
                                var random = new Random();
                                int ColorListIndex;
                            }
                            @foreach (var CatList in Model.CatList)
                            {
                                ColorListIndex = random.Next(ColorList.Count);
                                <li class="nav-item">
                                    <a href="@Url.Action("SingleCategory", "Home", new { CatName = CatList.Name })" class="nav-link">
                                        @CatList.Name <span class="float-right badge @ColorList[ColorListIndex]"> @CatList.Count</span>
                                    </a>
                                </li>
                            }

                        </ul>
                    </div>
                </div>
                <!-- /.widget-user -->
            </div>
            <div class="col-12 col-md-8 col-lg-8">

                @* Images Section *@
                @if (Model.Blog.HasImages)
                {
                    <div class="carousel mb-5">
                        @foreach (var BlogImgs in Model.BlogImages)
                        {

                            <div class="carousel-cell">
                                <img class="lazy" src="~/Images/img-spinner.svg" data-src="/Images/Blog/@BlogImgs.URL" alt="@BlogImgs.Alt" />
                            </div>
                        }
                    </div>
                }

                @* Blog Content here *@

                @Html.Raw(Model.Blog.Content)

                @* Comments section *@
                <div style="margin-top:20px">
                    <div class="card card-info card-outline direct-chat direct-chat-info">
                        <div class="card-header">
                            <h3 class="card-title">Comments</h3>

                            <div class="card-tools">
                                <span data-toggle="tooltip" title="@Model.FormatedCommentsCount New Messages" class="badge bg-success" id="span-CommentCount">@Model.FormatedCommentsCount</span>
                                <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                    <i class="fas fa-minus"></i>
                                </button>

                                <button type="button" class="btn btn-tool" data-card-widget="remove">
                                    <i class="fas fa-times"></i>
                                </button>
                            </div>
                        </div>
                        <!-- /.card-header -->
                        <div class="card-body" id="FocusOnCommentsDiv">
                            <input type="hidden" name="TotalComments" value="@Model.CommentsCount" />
                            <div class="direct-chat-messages" style="height: 350px;">

                                <div id="direct-chat-messages">
                                    @foreach (var Commentitem in Model.CommentsList)
                                    {
                                        Html.RenderPartial("_SingleComment", Commentitem);
                                    }
                                </div>

                                <div id="Loader" class="hidden">
                                    <div class="row mb-3">
                                        <div class="col-12">
                                            <div class="text-line-loader float-left" style="height:16px;width:20%"></div>
                                            <div class="text-line-loader float-right" style="height:16px;width:20%"></div>
                                            <div class="clearfix"></div>
                                        </div>
                                        <div class="mb-2"></div>
                                        <div class="col-12">
                                            <div class="image-loader float-left" style="height: 40px;width: 40px;border-radius: 50%;"></div>
                                            <div class="text-line-loader float-right" style="border-radius: .3rem;width: 94%;height: 40px;margin:unset"></div>
                                        </div>
                                        <div class="col-10"></div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-12">
                                            <div class="text-line-loader float-left" style="height:16px;width:20%"></div>
                                            <div class="text-line-loader float-right" style="height:16px;width:20%"></div>
                                            <div class="clearfix"></div>
                                        </div>
                                        <div class="mb-2"></div>
                                        <div class="col-12">
                                            <div class="image-loader float-left" style="height: 40px;width: 40px;border-radius: 50%;"></div>
                                            <div class="text-line-loader float-right" style="border-radius: .3rem;width: 94%;height: 40px;margin:unset"></div>
                                        </div>
                                        <div class="col-10"></div>
                                    </div>
                                    <div class="row mb-3">
                                        <div class="col-12">
                                            <div class="text-line-loader float-left" style="height:16px;width:20%"></div>
                                            <div class="text-line-loader float-right" style="height:16px;width:20%"></div>
                                            <div class="clearfix"></div>
                                        </div>
                                        <div class="mb-2"></div>
                                        <div class="col-12">
                                            <div class="image-loader float-left" style="height: 40px;width: 40px;border-radius: 50%;"></div>
                                            <div class="text-line-loader float-right" style="border-radius: .3rem;width: 94%;height: 40px;margin:unset"></div>
                                        </div>
                                        <div class="col-10"></div>
                                    </div>
                                </div>

                                @if (Model.CommentsCount > 5)
                                {
                                    <div class="text-center" id="LoadMoreData-div">
                                        <a href="#" id="btn-LoadMoreData">Load More Comments</a>
                                    </div>
                                }
                                <div id="LastDivForFocus" tabindex="1" style="outline:none"></div>

                            </div>
                            <!--/.direct-chat-messages-->

                        </div>
                        <!-- /.card-body -->
                        <div class="card-footer">

                            <input type="hidden" name="BlogID" id="BlogID" value="@Model.Blog.BlogID" />

                            @if (Session["userID"] == null)
                            {
                                <button class="btn btn-dark text-white btn-block" type="button" data-toggle="modal" data-target="#modal-login">Login/Register to comment</button>
                            }
                            else
                            {
                                using (Html.BeginForm("AjaxAddComment", "Blog", FormMethod.Post, new { @id = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    double UserID = Convert.ToDouble(Session["userID"]);

                                    <input type="hidden" name="UserID" id="UserID" value="@UserID" />

                                    <div id="div-CommentSection">
                                        <div class="input-group">

                                            <input type="text" name="Text" id="Text" placeholder="Post Comment...." autocomplete="off" class="form-control" />

                                            <span class="input-group-append">
                                                <button type="submit" class="btn btn-outline-info" id="btn-comment">Send</button>
                                                <div class="spinner-border text-info hidden" role="status" id="spinner"></div>
                                            </span>
                                        </div>
                                        <span id="error_Text" class="form-error"></span>
                                    </div>
                                }
                            }
                        </div>
                        <!-- /.card-footer-->
                    </div>
                    <!--/.direct-chat -->
                </div>
            </div>
            @* Adds section *@
            <div class="col-md-2 col-lg-2">
                <div class="card sticky-top-t1">
                    <span class="text-center text-black-50">Advertisements</span>

                    @if (Model.AdsList.Count > 0)
                    {
                        foreach (var Ads in Model.AdsList)
                        {
                            <a href="@Ads.Target">
                                <img class="img-fluid lazy" src="~/Images/img-spinner.svg" data-src="/Images/Ads/@Ads.ImgUrl" />
                            </a>
                            <br />
                        }
                    }
                    else
                    {
                        <img class="img-fluid" src="https://media-exp1.licdn.com/dms/image/C560BAQHpg-r-l1OuMw/company-logo_200_200/0?e=2159024400&v=beta&t=OpcQBP3_pWwy8srJcQHoDHxaUH9MRN1RPaV5ZzKoUEY" />
                        <br />
                        <img class="img-fluid" src="https://media-exp1.licdn.com/dms/image/C560BAQHpg-r-l1OuMw/company-logo_200_200/0?e=2159024400&v=beta&t=OpcQBP3_pWwy8srJcQHoDHxaUH9MRN1RPaV5ZzKoUEY" />
                    }
                </div>
            </div>
        </div>
    </div>
    <!-- /.card-body -->
</div>
@section scripts{
    @Scripts.Render("~/js/jqueryval")
    @Scripts.Render("~/js/jquery-ui")
    @Scripts.Render("~/js/sweetalert2")

    @if (Session["userID"] != null)
    {
        <script src="~/Scripts/FollowController.js"></script>
    }
    <script src="~/Plugins/flickity/flickity.js" type="text/javascript"></script>
    <script>
        //$.widget.bridge('uibutton', $.ui.button);
        $.widget.bridge('uibutton', $.ui.button);
        $.widget.bridge('uitooltip', $.ui.tooltip);

        $('.direct-chat-messages').overlayScrollbars({
            resize: "vertical",
            scrollbars: {
                autoHide: 'leave',
            }
        }); 

        var $carousel = $('.carousel').flickity({
            imagesLoaded: true,
            percentPosition: false,
        });

        var $imgs = $carousel.find('.carousel-cell img');
        // get transform property
        var docStyle = document.documentElement.style;
        var transformProp = typeof docStyle.transform == 'string' ?
            'transform' : 'WebkitTransform';
        // get Flickity instance
        var flkty = $carousel.data('flickity');

        $carousel.on('scroll.flickity', function () {
            flkty.slides.forEach(function (slide, i) {
                var img = $imgs[i];
                var x = (slide.target + flkty.x) * -1 / 3;
                img.style[transformProp] = 'translateX(' + x + 'px)';
            });
        });
    </script>

    <script type="text/javascript">
        var $CommentCount = parseInt($('#span-CommentCount').text());
        var $CurrentDataCount = @Model.CommentsList.Count;
        var $MoreData = @if (Model.CommentsCount > 5) { @("true") } else { @("false") };

        $(document).ready(function () {

            setInterval(function () {
                $.ajax({
                    type: 'post',
                    url: '/blog/AjaxIncrBlogViews/',
                    data: {
                       BlogID : $('#BlogID').val(),
                    },
                    success: function (data) {

                    }
                });
            }, 1000);

            $('#btn-LoadMoreData').click(function () {
                if ($MoreData) {
                     var formData = new FormData();
                    formData.append('CurrentDataCount', $CurrentDataCount);
                    formData.append('BlogID', $('#BlogID').val());

                    $.ajax({
                        type: 'post',
                        url: '/blog/AjaxLoadComments',
                        data: formData,
                        contentType: false,
                        processData: false,
                        beforeSend: function () {
                            $('#Loader').removeClass('hidden');
                            $('#LastDivForFocus').focus();
                            $('#LoadMoreData-div').addClass('hidden');
                        },
                        success: function (data) {
                            $('#LoadMoreData-div').removeClass('hidden');
                            if (data.status) {
                                $MoreData = data.MoreData;
                                $CurrentDataCount = data.CurrentDataCount;
                                $('#span-CommentCount').text(data.CommentsCount)
                                $CommentCount = data.CommentsCount;

                                if (!$MoreData) {
                                    $('#LoadMoreData-div').html('<p class="text-black-50 text-center">No More Comments To Load!</p>');
                                }
                                setTimeout(function () {
                                    $('#Loader').addClass('hidden');
                                    $("#direct-chat-messages").append(data.content);
                                    Lazzzy();
                                }, 2000);

                            } else {
                                $('#Loader').addClass('hidden');
                                // unknown error
                                Swal.fire({
                                    position: 'top-end',
                                    icon: 'error',
                                    title: '',
                                    text: 'An unknown error has occured. Please try again later!',
                                    showConfirmButton: false,
                                });
                            }

                            return false;
                        }
                    });
                }
                return false;
            });

            $('#btn-comment').click(function () {

                var FormValid = false;

                if ($.trim($('#Text').val()).length == 0) {
                    $('#error_Text').text('This field cannot be empty');
                    $("#div-CommentSection").effect("shake", { times: 3 }, 500);
                } else {
                    FormValid = true;
                }
                if (FormValid) {
                    var form = $('#form')[0];
                    var formData = new FormData(form);
                    formData.append('BlogID', $('#BlogID').val());
                    $.ajax({
                        type: 'post',
                        url: form.action,
                        data: formData,
                        contentType: false,
                        processData: false,
                        cache: false,
                        beforeSend: function () {
                            $("#form :input").prop("disabled", true);
                            $('#btn-comment').addClass('hidden');
                            $('#spinner').removeClass('hidden');
                        },
                        success: function (data) {
                            if (data.status) {

                                var Comment = `
                                <div class="direct-chat-msg" tabindex="1" id="`+ data.CommentID + `" style="display:none">
                                    <div class="direct-chat-infos clearfix">
                                        <span class="direct-chat-name">@ViewBag.Name</span>
                                        <span class="direct-chat-timestamp float-right">Just Now</span>
                                    </div>
                                    @if (ViewBag.ImgUrl == null)
                                    {
                                        <img src="/Images/default_user.png" class="direct-chat-img" alt="User Image">
                                    }
                                    else
                                    {
                                        <img src="/Images/UserProfiles/@ViewBag.ImgUrl" class="direct-chat-img" alt="@ViewBag.UserName">
                                    }
                                    <div class="direct-chat-text">
                                        `+ $('#Text').val() + `
                                    </div>
                                </div>
                                `;
                                $("#direct-chat-messages").prepend(Comment);
                                $('#' + data.CommentID).fadeIn("slow");
                                $('#' + data.CommentID).focus();
                                $('#' + data.CommentID).effect("highlight", { color: "#b2ebf2" }, 3000);

                                $("#form :input").prop("disabled", false);
                                $('#btn-comment').removeClass('hidden');
                                $('#spinner').addClass('hidden');

                                $CommentCount++;
                                $CurrentDataCount++;
                                $('#span-CommentCount').text($CommentCount);
                                $('#Text').val('');

                            } else {
                                // unknown error
                                Swal.fire({
                                    position: 'top-end',
                                    icon: 'error',
                                    title: '',
                                    text: 'An unknown error has occured. Please try again later!',
                                    showConfirmButton: false,
                                });
                            }

                            return false;
                        }
                    });
                    return false;
                }
                return false;
            });

            $(document).on('click', '.Bookmark', function () {
                var formData = new FormData();
                formData.append('State', '1');
                formData.append('BlogID', $('#BlogID').val());
                $.ajax({
                    type: 'post',
                    url: 'AjaxBookmark',
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        if (data.status) {
                            $('.Bookmark').removeClass('far Bookmark').addClass('fas Bookmarked').attr('title', 'Bookmarked');
                            Swal.fire({
                                position: 'top-end',
                                icon: 'success',
                                title: '',
                                text: 'Blog bookmarked successfully',
                                showConfirmButton: false,
                                timer: 2000
                            });
                        } else {
                            // unknown error
                            Swal.fire({
                                position: 'top-end',
                                icon: 'error',
                                title: '',
                                text: 'An unknown error has occured. Please try again later!',
                                showConfirmButton: false,
                            });
                        }
                    }
                });

            });

            $(document).on('click', '.Bookmarked', function () {

                var formData = new FormData();
                formData.append('State', '2');
                formData.append('BlogID', $('#BlogID').val());
                $.ajax({
                    type: 'post',
                    url: 'AjaxBookmark',
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        if (data.status) {
                            $('.Bookmarked').removeClass('fas Bookmarked').addClass('far Bookmark').attr('title', 'Bookmark');
                            Swal.fire({
                                position: 'top-end',
                                icon: 'success',
                                title: '',
                                text: 'Blog removed from book successfully!',
                                showConfirmButton: false,
                                timer: 2000
                            });
                        } else {
                            // unknown error
                            Swal.fire({
                                position: 'top-end',
                                icon: 'error',
                                title: '',
                                text: 'An unknown error has occured. Please try again later!',
                                showConfirmButton: false,
                            });
                        }
                    }
                });
            });

            $(document).on('click', '.LikeBlog', function () {

                var formData = new FormData();
                formData.append('State', '1');
                formData.append('BlogID', $('#BlogID').val());
                $.ajax({
                    type: 'post',
                    url: 'AjaxLike',
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        if (data.status) {
                            $('.LikeBlog').removeClass('LikeBlog').addClass('LikedBlog').attr('title', 'Liked');
                            var Before = $('#likesCount').text();
                            $('#likesCount').text(+Before + 1);
                        } else {
                            // unknown error
                            Swal.fire({
                                position: 'top-end',
                                icon: 'error',
                                title: '',
                                text: 'An unknown error has occured. Please try again later!',
                                showConfirmButton: false,
                            });
                        }
                    }
                });
            });

            $(document).on('click', '.LikedBlog', function () {

                var formData = new FormData();
                formData.append('State', '2');
                formData.append('BlogID', $('#BlogID').val());
                $.ajax({
                    type: 'post',
                    url: 'AjaxLike',
                    data: formData,
                    contentType: false,
                    processData: false,
                    success: function (data) {
                        if (data.status) {
                            $('.LikedBlog').removeClass('LikedBlog').addClass('LikeBlog').attr('title', 'Like');
                            var Before = $('#likesCount').text();
                            $('#likesCount').text(+Before - 1);
                        } else {
                            // unknown error
                            Swal.fire({
                                position: 'top-end',
                                icon: 'error',
                                title: '',
                                text: 'An unknown error has occured. Please try again later!',
                                showConfirmButton: false,
                            });
                        }
                    }
                });
            });

            $(document).on('click', '.DisabledLikeBlog', function () {
                Swal.fire({
                    position: 'top-end',
                    icon: 'error',
                    title: '',
                    text: 'Kindly login to like blog',
                    showConfirmButton: false,
                });
            });

            $(document).on('click', '.DisabledBookmark', function () {
                Swal.fire({
                    position: 'top-end',
                    icon: 'error',
                    title: '',
                    text: 'Kindly login to bookmark blog',
                    showConfirmButton: false,
                });
            });

        });
    </script>
}
